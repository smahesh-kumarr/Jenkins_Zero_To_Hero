After installing the Jenkins
If you are going to change the port 

systemctl edit jenkins --full

## Change the Port 8080 to 8090 some other you need

## After that restart the service
systemctl reload jenkins
systemctl restart jenkins
systemctl status jenkins


====================================================================

New Items
    Freestyle Project:
            Scenario
                When to Use: If you want to run simple tasks like compiling code, running tests, or deploying artifacts.
            Example: 
                A job that compiles a Java project using Maven and then runs unit tests.
            Key Features
                Supports build triggers (like SCM polling or scheduled builds).
                Integrates with plugins for additional functionality.
    
    
    Pipeline : 
            Scenario
                When to Use: For end-to-end automation involving multiple stages.
            Example:
                 A CI/CD pipeline that builds, tests, deploys, and sends notifications when complete.
            Key Features
                Declarative or scripted pipeline syntax.
                Stages and steps allow detailed control of workflow.
    
    
    Multi-Configuration Project
            Scenario
                When you want to test on multiple environments (different OS, versions of Java, or browser types).
            Example:
                 A job that tests a web application on Chrome, Firefox, and Edge browsers simultaneously.
            Key Features
                Supports multiple combinations of variables.
                Allows parallel builds for different configurations.
    
    
    Folder 
            Scenario:
                When to Use: To group related projects by teams or applications.
            Example:
                 A folder named "E-Commerce" containing jobs for checkout service, product catalog, and user authentication builds.
            Key Features
                Allows nested folders for hierarchical job organization.
                Access control can be applied per folder.


    Multi-Branch Pipeline
            Scenario:    
                When to Use: For Git-based projects where different branches require separate builds.
            Example: 
                A pipeline for a project with main, develop, and feature/* branches.
            Key Features
                Automatically detects and runs pipelines on new branches.
                Works well with GitHub, Bitbucket, and other SCMs.

                
    Organization Folder
            Scenario
                When to Use: When managing builds for many repositories within an organization.
            Example: 
                A GitHub organization folder that scans all repositories and creates pipelines for those with Jenkinsfile.
            Key Features
                Automatically manages multiple repositories.    
                Integrates with GitHub Organizations or Bitbucket Teams.
===========================================================================================================================================
To navigate to the Workspace => /var/lib/jenkins/workspace
                                ls -ld */
                                ls -rlt or ls -la

Task ->
Create a Jenkins Master
Make a public maven project to build
Install maven tool on jenkins
Create a event on maven Like clean and Package
Test the maven repo
Makesure the artifacts stored in the workspace
Make the jar to deploy
Create the Successfull Test Result 
Use env variables used by the Jenkins
Finally Try this Jenkins Master


===========================================================================================================================================

Task -> 2

1. Make SSH Connection to Github

    Jenkins ------------------------------> Github
 (Credentials)                             (SSH Key)
       |                                       |
       V                                       V
    Private Key                            Public Key

2. ssh-keygen -t ed25519 -C "your_email@example.com"
3. cat /root/.ssh/id_ed25519.pub =>public key
4  cat /root/.ssh/id_ed25519  =>private key
5. Use of the credentials in jenkins create a ssh & authendication use of while in SCM (git credentials)

(1. It may Several Hours to configure Im lags in new keygen offered in github doc
2. And Make the Accept the first Connection)

===========================================================================================================================================

Build Perdically =>
*       *       *       *       *
min    Hour  DayMonth   Month   DayWeek
0-59   0-23   1-31       1-12     0-6(Sunday to Saturday)

Task To Trigger on Saturday => * * * * 6
Task To Trigger on Saturday 11:45 PM=> 45 23 * * 6

Task To Trigger on every 5 minutes => */5 * * * *

===========================================================================================================================================

Webhook For GitSCM Polling


Set up Webhook

1. create a webhook in github
   => Configure the url 
   => application/json
   => Make Push event
   => Add Individual Event If You Want

2. In Jenkins Add Jobs
    => Select Webhook For GitSCM Polling

3. Check with new commit
===========================================================================================================================================

Poll SCM => Checks Periodically If any Pushes to the repo then it will build automattically
Avoid unnecessary old committed repo to build

IN Build periodically wheather There is a change It will build according to the time
===========================================================================================================================================

Distributed Builds

 => Runs on nodes rather in Jenkins Master
 => Agent runs on node to execute the Task on behalf of Jenkins master
 => These do the Actual Work
 => Master manages these node
 => Different node can run different os and different tools and enable the Pipelune to build and test the same software
 => For Workloads more suitable one
 => Use TCP/Ip Protocol

Types of Distributed Builds
    Single master Multiple Master
    Multipleaster Multiple Master


